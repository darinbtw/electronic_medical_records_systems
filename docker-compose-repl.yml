services:
  master:
    image: postgres:16-alpine
    container_name: pg-master
    environment:
      POSTGRES_DB: medical_records
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    command: |
      postgres
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c listen_addresses='*'
    ports:
      - "5432:5432"
    networks:
      - pg-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pg-master-data:/var/lib/postgresql/data

  slave1:
    image: postgres:16-alpine
    container_name: pg-slave1
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - pg-network
    depends_on:
      master:
        condition: service_healthy
    volumes:
      - pg-slave1-data:/var/lib/postgresql/data
    command: |
      bash -c '
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup -h master -D /var/lib/postgresql/data -U postgres -v -P -R -X stream -c fast
      do
        echo "Waiting for master to be ready..."
        sleep 5
      done
      echo "host replication all 0.0.0.0/0 trust" >> /var/lib/postgresql/data/pg_hba.conf
      postgres
      '

  slave2:
    image: postgres:16-alpine
    container_name: pg-slave2
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - pg-network
    depends_on:
      master:
        condition: service_healthy
    volumes:
      - pg-slave2-data:/var/lib/postgresql/data
    command: |
      bash -c '
      rm -rf /var/lib/postgresql/data/*
      sleep 10
      until pg_basebackup -h master -D /var/lib/postgresql/data -U postgres -v -P -R -X stream -c fast
      do
        echo "Waiting for master to be ready..."
        sleep 5
      done
      echo "host replication all 0.0.0.0/0 trust" >> /var/lib/postgresql/data/pg_hba.conf
      postgres
      '

networks:
  pg-network:
    driver: bridge

volumes:
  pg-master-data:
  pg-slave1-data:
  pg-slave2-data: