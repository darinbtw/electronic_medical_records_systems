version: '3.8'

services:
  pg-primary:
    image: postgres:14
    container_name: pg-primary
    environment:
      POSTGRES_DB: medical_records
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "-c max_connections=200"
    command: |
      postgres
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c log_filename='postgresql.log'
      -c log_statement='all'
    ports:
      - "5432:5432"
    networks:
      - postgres-ha
    volumes:
      - pg-primary-data:/var/lib/postgresql/data
      - ./primary-init.sh:/docker-entrypoint-initdb.d/init.sh

  pg-replica1:
    image: postgres:14
    container_name: pg-replica1
    user: postgres
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - postgres-ha
    depends_on:
      - pg-primary
    volumes:
      - pg-replica1-data:/var/lib/postgresql/data
      - ./replica-entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/bash", "/entrypoint.sh"]

  pg-replica2:
    image: postgres:14
    container_name: pg-replica2
    user: postgres
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - postgres-ha
    depends_on:
      - pg-primary
    volumes:
      - pg-replica2-data:/var/lib/postgresql/data
      - ./replica-entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/bash", "/entrypoint.sh"]

networks:
  postgres-ha:
    driver: bridge

volumes:
  pg-primary-data:
  pg-replica1-data:
  pg-replica2-data:
