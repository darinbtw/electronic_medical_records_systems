"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ backup
"""
import time
import schedule
import subprocess
import sys
import os
from datetime import datetime

def create_backup():
    """–°–æ–∑–¥–∞–Ω–∏–µ backup"""
    print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ backup...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º backup —Å–∫—Ä–∏–ø—Ç
        result = subprocess.run([sys.executable, "backup.py"], 
                              cwd="scripts",
                              capture_output=True, 
                              text=True)
        
        if result.returncode == 0:
            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] ‚úÖ Backup —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] ‚ùå –û—à–∏–±–∫–∞ backup: {result.stderr}")
            
    except Exception as e:
        print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def cleanup_old_backups():
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö backup (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)"""
    import glob
    import time
    
    backup_dir = "backups"
    if not os.path.exists(backup_dir):
        return
    
    now = time.time()
    week_ago = now - (7 * 24 * 60 * 60)  # 7 –¥–Ω–µ–π –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    
    for backup_file in glob.glob(f"{backup_dir}/backup_*.sql.gz"):
        if os.path.getmtime(backup_file) < week_ago:
            try:
                os.remove(backup_file)
                print(f"–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π backup: {backup_file}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {backup_file}: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("üïê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ü–õ–ê–ù–ò–†–û–í–©–ò–ö BACKUP")
    print("=" * 40)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    schedule.every().day.at("07:45").do(create_backup)      # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 7:45
    schedule.every().day.at("14:00").do(create_backup)      # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 14:00
    schedule.every().day.at("03:00").do(cleanup_old_backups) # –û—á–∏—Å—Ç–∫–∞ –≤ 3:00
    
    print("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ backup:")
    print("  - –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 02:00")
    print("  - –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 14:00") 
    print("  - –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ 03:00")
    print("\n–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π backup —Å—Ä–∞–∑—É
    print("\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ backup...")
    create_backup()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    try:
        while True:
            schedule.run_pending()
            time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            
    except KeyboardInterrupt:
        print("\n\nüëã –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º schedule –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    try:
        import schedule
    except ImportError:
        print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ schedule...")
        subprocess.run([sys.executable, "-m", "pip", "install", "schedule"])
        import schedule
    
    main()